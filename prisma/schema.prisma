// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// Kullanıcı modeli
model User {
  id           String        @id @default(cuid())
  email        String        @unique
  name         String
  phone        String?
  password     String
  role         UserRole      @default(CUSTOMER)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  orders       Order[]
  reservations Reservation[]
}

enum UserRole {
  ADMIN
  STAFF
  CUSTOMER
}

// Menü kategorisi modeli
model Category {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  menuItems   MenuItem[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

// Menü öğesi modeli
model MenuItem {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  price       Float
  image       String
  categoryId  Int
  category    Category    @relation(fields: [categoryId], references: [id])
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([categoryId])
}

// Sipariş modeli
model Order {
  id           Int         @id @default(autoincrement())
  tableId      String
  table        Table       @relation(fields: [tableId], references: [id])
  status       String      @default("PENDING")
  customerNote String?
  orderItems   OrderItem[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  User         User?       @relation(fields: [userId], references: [id])
  userId       String?

  @@index([tableId])
}

// Sipariş öğesi modeli
model OrderItem {
  id         Int      @id @default(autoincrement())
  orderId    Int
  order      Order    @relation(fields: [orderId], references: [id])
  menuItemId Int
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
  quantity   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([orderId])
  @@index([menuItemId])
}

// Rezervasyon modeli
model Reservation {
  id              String   @id @default(cuid())
  name            String
  email           String
  phoneNumber     String
  date            DateTime
  time            String
  numberOfGuests  Int
  status          String   @default("PENDING")
  specialRequests String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  User            User?    @relation(fields: [userId], references: [id])
  userId          String?
}

// Masa modeli
model Table {
  id        String   @id
  number    Int      @unique
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
